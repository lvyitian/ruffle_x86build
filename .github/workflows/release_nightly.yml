name: Release Nightly

on:
  # Allow for manual dispatch on GitHub
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y libasound2-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Setup Node.js
        if: matrix.os == 'ubuntu-latest'
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      # wasm-bindgen-cli version must match wasm-bindgen crate version.
      # Be sure to update in test_web.yml, web/Cargo.toml and web/README.md.
      - name: Install wasm-bindgen
        run: cargo install wasm-bindgen-cli --version 0.2.73

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: binaryen

      # conda is available only with "shell: bash -l {0}".
      # See https://github.com/marketplace/actions/setup-miniconda.
      - name: Install binaryen
        shell: bash -l {0}
        run: conda install -c conda-forge binaryen

      - name: Build web
        if: matrix.os == 'ubuntu-latest'
        env:
          FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
          MOZILLA_API_KEY: ${{ secrets.MOZILLA_API_KEY }}
          MOZILLA_API_SECRET: ${{ secrets.MOZILLA_API_SECRET }}
          BUILD_ID: ${{ github.run_number }}
        working-directory: web
        shell: bash -l {0}
        run: |
          npm run bootstrap
          npm run build
          npm run docs
      - name: qwpwqwp
        if: matrix.os == 'windows-latest'
        run: |
            rustup target add i686-pc-windows-msvc
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --verbose --target i686-pc-windows-msvc
        env:
          RUSTFLAGS: -Ctarget-feature=+crt-static

      - name: Build macOS / Linux
        if: matrix.os == 'macOS-latest' || matrix.os == 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Package common
        run: |
          mkdir package
          cp README.md package/README.md
          cp LICENSE.md package/LICENSE.md

      - name: Package Windows
        if: matrix.os == 'windows-latest'
        run: |
          cp target/release/*.exe package/ruffle.exe
          7z a release.zip ./package/*

      - name: Package macOS / Linux
        if: matrix.os == 'macOS-latest' || matrix.os == 'ubuntu-latest'
        run: |
          cp target/release/ruffle_desktop package/ruffle
          cd package/
          tar -czvf ../release.tar.gz *

      - name: Package selfhosted
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd web/packages/selfhosted/dist/
          zip -r release.zip .

      - name: Upload Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./release.zip
          name: ruffle_nightly_windows.zip

      - name: Upload macOS
        if: matrix.os == 'macOS-latest'
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./release.tar.gz
          name: ruffle_nightly_mac.tar.gz

      - name: Upload Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./release.tar.gz
          name: ruffle_nightly_linux.tar.gz

      - name: Upload selfhosted
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./web/packages/selfhosted/dist/release.zip
          name: ruffle_nightly_selfhosted.zip

      - name: Upload generic extension
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./web/packages/extension/dist/ruffle_extension.zip
          name: ruffle_nightly_extension.zip

      - name: Upload Firefox extension
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./web/packages/extension/dist/firefox.xpi
          name: ruffle_nightly_firefox.xpi
